<?xml version="1.0" encoding="UTF-8"?>


<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="http://localhost:8888/dtds/services.xsd">
    <description>OFBiz Service Engine Services</description>
    <vendor>OFBiz</vendor>
    <version>1.0</version>

    <!-- Service Engine Services -->
    <service name="purgeOldJobs" engine="java"
            location="com.hanlin.fadp.service.ServiceUtil" invoke="purgeOldJobs" auth="true" use-transaction="false" semaphore="wait">
        <description>Cleans out old jobs which have been around longer then what is defined in serviceengine.xml</description>
        <required-permissions join-type="AND">
            <check-permission permission="SERVICE_INVOKE_ANY"/>
        </required-permissions>
        <!-- this service has no attributes -->
    </service>

    <service name="cancelScheduledJob" engine="java"
            location="com.hanlin.fadp.service.ServiceUtil" invoke="cancelJob" auth="true">
        <description>Cancels a schedule job</description>
        <required-permissions join-type="AND">
            <check-permission permission="SERVICE_INVOKE_ANY"/>
        </required-permissions>
        <auto-attributes entity-name="JobSandbox" include="pk" mode="IN" optional="false"/>
        <attribute name="cancelDateTime" type="Timestamp" mode="OUT" optional="false"/>
        <attribute name="statusId" type="String" mode="OUT" optional="false"/> <!-- To more easily see current pending jobs and possibly cancel some others -->
    </service>

    <service name="cancelJobRetries" engine="java"
            location="com.hanlin.fadp.service.ServiceUtil" invoke="cancelJobRetries" auth="true">
        <description>Cancels a job retry flag</description>
        <required-permissions join-type="AND">
            <check-permission permission="SERVICE_INVOKE_ANY"/>
        </required-permissions>
        <auto-attributes entity-name="JobSandbox" include="pk" mode="IN" optional="false"/>
    </service>

    <service name="resetScheduledJob" engine="java"
            location="com.hanlin.fadp.service.ServiceUtil" invoke="resetJob" auth="true">
        <description>Resets a stale job so it can be re-run</description>
        <required-permissions join-type="AND">
            <check-permission permission="SERVICE_INVOKE_ANY"/>
        </required-permissions>
        <auto-attributes entity-name="JobSandbox" include="pk" mode="IN" optional="false"/>
    </service>

    <!-- Service Engine Interfaces -->
    <service name="permissionInterface" engine="interface">
        <description>Interface to describe base parameters for Permission Services</description>
        <attribute name="mainAction" type="String" mode="IN" optional="true">
            <description>The action requiring permission. Must be one of ADMIN, CREATE, UPDATE, DELETE, VIEW.</description>
        </attribute>
        <attribute name="primaryPermission" type="String" mode="IN" optional="true">
            <description>The permission to check - typically the name of an application or entity.</description>
        </attribute>
        <attribute name="altPermission" type="String" mode="IN" optional="true">
            <description>Optional alternate permission to check. If the primary permission check fails,
            the alternate permission will be checked.</description>
        </attribute>
        <attribute name="resourceDescription" type="String" mode="IN" optional="true">
            <description>The name of the resource being accessed - defaults to service name.</description>
        </attribute>
        <attribute name="hasPermission" type="Boolean" mode="OUT" optional="false">
            <description>Contains true if the requested permission has been granted.</description>
        </attribute>
        <attribute name="failMessage" type="String" mode="OUT" optional="true">
            <description>Contains an explanation if the permission was denied.</description>
        </attribute>
    </service>

    <service name="authenticationInterface" engine="interface">
        <description>Interface to describe authentication services</description>
        <attribute name="login.username" type="String" mode="IN"/>
        <attribute name="login.password" type="String" mode="IN"/>
        <attribute name="visitId" type="String" mode="IN" optional="true"/>
        <attribute name="isServiceAuth" type="Boolean" mode="IN" optional="true"/>
        <attribute name="userLogin" type="com.hanlin.fadp.entity.GenericValue" mode="OUT"/>
        <attribute name="userLoginSession" type="java.util.Map" mode="OUT" optional="true"/>
    </service>

    <service name="serviceStreamInterface" engine="interface">
        <description>Interface to describe services call with streams</description>
        <attribute name="inputStream" type="java.io.InputStream" mode="IN"/>
        <attribute name="outputStream" type="java.io.OutputStream" mode="IN"/>
        <attribute name="contentType" type="String" mode="OUT"/>
    </service>

    <service name="serviceEcaConditionInterface" engine="interface">
        <description>Interface to describe services which are used as SECA conditions</description>
        <attribute name="serviceContext" type="Map" mode="IN"/>
        <attribute name="serviceName" type="String" mode="IN"/>
        <attribute name="conditionReply" type="Boolean" mode="OUT"/>
    </service>
    <service name="serviceMcaConditionInterface" engine="interface">
        <description>Interface to describe services which are used as SMCA conditions</description>
        <attribute name="messageWrapper" type="com.hanlin.fadp.service.mail.MimeMessageWrapper" mode="IN"/>
        <attribute name="conditionReply" type="Boolean" mode="OUT"/>
    </service>

    <service name="mailProcessInterface" engine="interface">
        <description>Interface to describe services used to process incoming email</description>
        <attribute name="messageWrapper" type="com.hanlin.fadp.service.mail.MimeMessageWrapper" mode="IN"/>
    </service>

    <!-- simple condition implementation -->
    <service name="effectiveDateEcaCondition" engine="java" auth="false" use-transaction="false"
            location="com.hanlin.fadp.service.ServiceUtil" invoke="genericDateCondition">
        <implements service="serviceEcaConditionInterface"/>
        <attribute name="fromDate" mode="IN" type="java.sql.Timestamp" optional="true"/>
        <attribute name="thruDate" mode="IN" type="java.sql.Timestamp" optional="true"/>
    </service>
</services>
